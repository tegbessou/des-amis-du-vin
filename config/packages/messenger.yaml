framework:
    messenger:
        transports:
            sync: 'sync://'
            bottle_inventory:
                dsn: '%env(MESSENGER_TRANSPORT_BOTTLE_INVENTORY_DSN)%'
                serializer: App\BottleInventory\Infrastructure\Symfony\Messenger\Serializer\SecurityExternalMessageSerializer
                options:
                    exchange:
                        name: bottle_inventory
                        type: direct
                        default_publish_routing_key: bottle_inventory
                    queues:
                        bottle_inventory:
                            binding_keys: [ bottle_inventory ]
            security:
                dsn: '%env(MESSENGER_TRANSPORT_SECURITY_DSN)%'
                options:
                    exchange:
                        name: security
                        type: direct
                        default_publish_routing_key: security
                    queues:
                        security:
                            binding_keys: [ security ]
            security_to_bottle_inventory:
                dsn: '%env(MESSENGER_TRANSPORT_SECURITY_TO_BOTTLE_INVENTORY_DSN)%'
                serializer: messenger.transport.symfony_serializer
                options:
                    exchange:
                        name: bottle_inventory
                        type: direct
                        default_publish_routing_key: bottle_inventory
                    queues:
                        bottle_inventory:
                            binding_keys: [bottle_inventory]
            bottle_inventory_to_tasting:
                dsn: '%env(MESSENGER_TRANSPORT_BOTTLE_INVENTORY_TO_TASTING_DSN)%'
                serializer: messenger.transport.symfony_serializer
                options:
                    exchange:
                        name: tasting
                        type: direct
                        default_publish_routing_key: tasting
                    queues:
                        tasting:
                            binding_keys: [tasting]
        default_bus: command.bus
        buses:
            command.bus: ~
            query.bus: ~
            event.bus: ~
        routing:
            'App\Shared\Application\Command\CommandInterface': sync
            'App\Shared\Application\Query\QueryInterface': sync

            'App\BottleInventory\Infrastructure\Symfony\Messenger\Message\BottleTastedMessage': bottle_inventory_to_tasting

            'App\Security\Infrastructure\Symfony\Messenger\Message\UserCreatedMessage': security_to_bottle_inventory

when@test:
    framework:
        messenger:
            transports:
                bottle_inventory:
                    dsn: 'test://'
                    serializer: messenger.transport.native_php_serializer
                security: 'test://'
                security_to_bottle_inventory: 'test://'
                bottle_inventory_to_tasting: 'test://'

            routing:
                'App\BottleInventory\Infrastructure\Symfony\Messenger\ExternalMessage\UserCreatedMessage': bottle_inventory