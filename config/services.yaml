services:
  _defaults:
    autowire: true
    autoconfigure: true
    bind:
      $kernelProjectDirectory: '%kernel.project_dir%'
      $emailTastingUserService: '%env(SERVICE_ACCOUNT_TASTING_LOGIN)%'
      $passwordTastingUserService: '%env(SERVICE_ACCOUNT_TASTING_PASSWORD)%'
      $emailBottleInventoryUserService: '%env(SERVICE_ACCOUNT_BOTTLE_INVENTORY_LOGIN)%'
      $passwordBottleInventoryUserService: '%env(SERVICE_ACCOUNT_BOTTLE_INVENTORY_PASSWORD)%'

  App\:
    resource: '../src/'

  DataFixtures\:
    resource: '../fixtures'

  App\BottleInventory\Application\EventListener\OnBottleTasted:
    tags: [kernel.event_listener]

  App\BottleInventory\Infrastructure\Country\Repository\CountryRepositoryInterface:
    alias: App\BottleInventory\Infrastructure\Country\Repository\CountryRepository

  App\BottleInventory\Infrastructure\Security\Repository\UserRepositoryInterface:
    alias: App\BottleInventory\Infrastructure\Security\Repository\UserRepository

  App\BottleInventory\Domain\Service\UploadBottlePictureInterface:
    alias: App\BottleInventory\Infrastructure\VichUploader\UploadBottlePictureVichUploader

  App\BottleInventory\Application\Adapter\BottleListAdapterInterface:
    alias: App\BottleInventory\Infrastructure\Doctrine\Adapter\BottleListDoctrineAdapter
    public: true

  App\BottleInventory\Application\Projection\CreateBottleProjection:
    tags: [kernel.event_listener]

  App\BottleInventory\Application\Projection\CreateBottleListProjection:
    tags: [kernel.event_listener]

  App\BottleInventory\Application\Projection\AddPictureBottleProjection:
    tags: [kernel.event_listener]

  App\BottleInventory\Application\Projection\AddPictureBottleListProjection:
    tags: [kernel.event_listener]

  App\BottleInventory\Application\Projection\TasteBottleProjection:
    tags: [kernel.event_listener]

  App\BottleInventory\Application\Projection\UpdateBottleProjection:
    tags: [kernel.event_listener]

  App\BottleInventory\Application\Projection\UpdateBottleListProjection:
    tags: [kernel.event_listener]

  App\BottleInventory\Application\Projection\DeleteBottleProjection:
    tags: [kernel.event_listener]

  App\BottleInventory\Application\Projection\DeleteBottleListProjection:
    tags: [kernel.event_listener]

  App\Security\Application\Projection\CreateUserProjection:
    tags: [kernel.event_listener]

  App\Country\Application\Projection\CreateCountryProjection:
    tags: [kernel.event_listener]

  App\Tasting\Application\Projection\CreateTastingProjection:
    tags: [kernel.event_listener]

  App\Tasting\Application\Projection\CreateInvitationProjection:
    tags: [kernel.event_listener]

  App\Tasting\Application\Projection\DeleteInvitationProjection:
    tags: [kernel.event_listener]

  App\Tasting\Infrastructure\Security\Repository\UserRepositoryInterface:
    alias: App\Tasting\Infrastructure\Security\Repository\UserRepository

  App\Security\Application\Adapter\UserAdapterInterface:
    alias: App\Security\Infrastructure\Doctrine\Adapter\UserDoctrineAdapter
    public: true

  App\Country\Application\Adapter\CountryAdapterInterface:
    alias: App\Country\Infrastructure\Doctrine\Adapter\CountryDoctrineAdapter
    public: true

  App\Tasting\Application\Adapter\TastingAdapterInterface:
    alias: App\Tasting\Infrastructure\Doctrine\Adapter\TastingDoctrineAdapter
    public: true

  App\Tasting\Application\Adapter\InvitationAdapterInterface:
    alias: App\Tasting\Infrastructure\Doctrine\Adapter\InvitationDoctrineAdapter
    public: true

  App\Tasting\Application\Service\NotificationInterface:
    alias: App\Tasting\Infrastructure\Firebase\NotificationFirebase
    public: true

  App\Security\Domain\Service\AuthenticateUserFromProviderInterface:
    alias: App\Security\Infrastructure\Firebase\Security\Authenticator\AuthenticateUserFromProviderFirebase

  App\Security\Domain\Service\LogInInterface:
    alias: App\Security\Infrastructure\Firebase\Security\LogIn\LogInFirebase

  App\Tasting\Application\EventListener\OnInvitationCreated:
    tags: [kernel.event_listener]

  App\Tasting\Application\EventListener\OnInvitationAccepted:
    tags: [kernel.event_listener]

  App\Tasting\Application\EventListener\OnInvitationRejected:
    tags: [kernel.event_listener]

when@dev:
  services:
    App\Security\Domain\Service\AuthenticateUserFromProviderInterface:
      alias: App\Security\Infrastructure\Firebase\Security\Authenticator\AuthenticateUserFromProviderFakeFirebase

when@test:
  services:
    App\BottleInventory\Infrastructure\Country\Repository\CountryRepositoryInterface:
      alias: App\BottleInventory\Infrastructure\Country\Repository\CountryFakeRepository

    App\BottleInventory\Infrastructure\Security\Repository\UserRepositoryInterface:
      alias: App\BottleInventory\Infrastructure\Security\Repository\UserFakeRepository

    App\BottleInventory\Domain\Service\UploadBottlePictureInterface:
      alias: App\BottleInventory\Infrastructure\VichUploader\UploadBottlePictureVichUploaderFake

    App\Tasting\Infrastructure\Security\Repository\UserRepositoryInterface:
      alias: App\Tasting\Infrastructure\Security\Repository\UserFakeRepository

    App\Tasting\Application\Service\NotificationInterface:
      alias: App\Tasting\Infrastructure\Firebase\NotificationFirebaseFake
      public: true

    App\Security\Domain\Service\AuthenticateUserFromProviderInterface:
      alias: App\Security\Infrastructure\Firebase\Security\Authenticator\AuthenticateUserFromProviderFakeFirebase

    App\Security\Domain\Service\LogInInterface:
      alias: App\Security\Infrastructure\Firebase\Security\LogIn\LogInFakeFirebase
