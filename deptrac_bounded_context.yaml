parameters:
    ignore_uncovered_internal_classes: false

    paths:
        - ./src

    layers:
        - name: User
          collectors:
              - type: bool
                must:
                  - type: directory
                    regex: src/User/.*
                must_not:
                  - { type: className, regex: ^App\\User\\Domain\\Event\\OwnerNotExistEvent }

        - name: UserContextMap
          collectors:
            - { type: className, regex: ^App\\User\\Domain\\Event\\OwnerNotExistEvent }

        - name: Bottle
          collectors:
            - type: bool
              must:
                - type: directory
                  regex: src/Bottle/.*
              must_not:
                - { type: className, regex: ^App\\Bottle\\Domain\\Event\\CheckOwnerExistEvent }

        - name: BottleContextMap
          collectors:
            - { type: className, regex: ^App\\Bottle\\Domain\\Event\\CheckOwnerExistEvent }

        - name: Country
          collectors:
              - type: directory
                regex: src/Country/.*

        - name: Shared
          collectors:
              - type: directory
                regex: src/Shared/.*

        - name: Vendors
          collectors:
              - { type: className, regex: ^ApiPlatform\\ }
              - { type: className, regex: ^Lexik\\ }
              - { type: className, regex: ^Symfony\\ }
              - { type: className, regex: ^Doctrine\\ }
              - { type: className, regex: ^Webmozart\\ }
              - { type: className, regex: ^Kreait\\ }
              - { type: className, regex: ^Attribute }
              - { type: className, regex: ^Override }
              - { type: className, regex: ^Exception }
              - { type: className, regex: ^LogicException }
              - { type: className, regex: ^RuntimeException }
              - { type: className, regex: ^InvalidArgumentException }
              - { type: className, regex: ^DateTime }
              - { type: className, regex: ^Iterator }
              - { type: className, regex: ^Countable }
              - { type: className, regex: ^Traversable }
              - { type: className, regex: ^ArrayIterator }

    ruleset:
        User: [ Shared, Vendors, BottleContextMap, UserContextMap ]
        UserContextMap: [ Shared, Vendors ]
        Bottle: [ Shared, Vendors, BottleContextMap,UserContextMap ]
        BottleContextMap: [ Shared, Vendors ]
        Country: [ Shared, Vendors ]
        Shared: [ Vendors ]